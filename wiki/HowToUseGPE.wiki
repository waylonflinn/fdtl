#summary How to use the Gross-Pitaevskii Equation solving module.
#labels Phase-Deploy,Featured

= Introduction =

This page describes the basics of how to employ the executable for solving the Gross-Pitaevskii equation.

These instructions refer to use of the executable which solves the standard GPE in cylindrical coordinates assuming axial symmetry. It was created to model [http://en.wikipedia.org/wiki/Bose-Einstein_condensate BEC] behaviour in an anisotropic cylindrical potential. The version which solves the modified GPE functions identically.

Before the executable may be employed it (most likely) must be compiled from source. Instructions for this can be found on the [HowToCompileGPE] page.

_TODO: add more instructions_

= Details =

== Input File ==

The input file describes the boundary conditions. All boundaries are rectangular. Each side may be assigned either Dirichlet (value) or Neumann (value of derivative) conditions. Both may occur in the same file.

Each line in the file...

  * specifies the condition along an edge of the bounding rectangle.
  * may be preceded by a line containing one of the words 'Dirichlet' or 'Neumann' to indicate that the line following specifies a boundary condition of that type.
  * maps to a boundary based on order. Boundaries are specified clockwise starting at the top; thus, the mapping is as follows:
    * top (upper bound for x)
    * right (upper bound for y)
    * bottom (lower bound for x)
    * left (lower bound for y)

Each character in a line...

  * must be numeric or whitespace which, respectively,
    * specifies the value at a particular point along the boundary
    * separates two of those values

The following is an example which specifies mixed (Neumann and Dirichlet) conditions.

{{{
Dirichlet
0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1
Dirichlet
0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1
Neumann
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Neumann
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
}}}

This example may be found under version control, along with other samples, [http://code.google.com/p/fdtl/source/browse/trunk/sample/ here].

=== Extras ===
Several facilities exist as part of the input file system to allow more abbreviated input
  * if boundary condition type is ommitted 'Dirichlet', is assumed.
  * boundary condition type may be abbreviated to the first letter of the word and is case insensitive
  * if a boundary has a constant value it may be abbreviated to a single entry
 
== Command Line Arguments ==

_TODO: add this_